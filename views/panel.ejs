<link href="https://unpkg.com/@webpixels/css/dist/index.css" rel="stylesheet">
<div class="d-flex flex-column flex-lg-row h-lg-full bg-surface-secondary">
    <!-- Vertical Navbar -->
    <nav class="navbar show navbar-vertical h-lg-screen navbar-expand-lg px-0 py-3 py-lg-0 navbar-light bg-light border-bottom border-bottom-lg-0 border-end-lg" id="navbarVertical">
      <div class="container-fluid">
        <!-- Toggler -->
        <button class="navbar-toggler ms-n2" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarCollapse" aria-controls="sidebarCollapse" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <!-- Brand -->
        <a class="navbar-brand py-lg-5 mb-lg-5 px-lg-6 me-0" href="#">
          <img src="https://raw.githubusercontent.com/is-a-dev/register/main/media/logo.png" alt="...">
        </a>
        <!-- User menu (mobile) -->
        <div class="navbar-user d-lg-none">
          <!-- Dropdown -->
          <div class="dropdown">
            <!-- Toggle -->
            <a href="#" id="sidebarAvatar" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <div class="avatar-parent-child">
                <img alt="Image Placeholder" src="<%= profilepic %>" class="avatar avatar- rounded-circle">
                <span class="avatar-child avatar-badge bg-success"></span>
              </div>
            </a>
          </div>
        </div>
        <!-- Collapse -->
        <div class="collapse navbar-collapse" id="sidebarCollapse">
          <!-- Form -->
          <form class="mt-4 mb-3 d-none">
            <div x-data="{focused: false}" :class="{ 'focused': focused }">
              <div class="input-group input-group-sm">
                <span class="input-group-text border-end-0 rounded-left-pill" id="basic-addon1">
                  <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-search" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z" />
                    <path fill-rule="evenodd" d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z" />
                  </svg>
                </span>
                <input type="text" class="form-control border-left-0 ps-0 rounded-end-pill" placeholder="Search" aria-label="Username" aria-describedby="basic-addon1" @focus="focused = !focused" @click.away="focused = false">
              </div>
            </div>
          </form>
          <!-- Navigation -->
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link" href="https://manage.is-a.dev">
                <i class="bi bi-house"></i> Dashboard
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">
                <i class="bi bi-bar-chart"></i> Analitycs
              </a>
            </li>
          </ul>
          <!-- Divider -->
          <hr class="navbar-divider my-5 opacity-20">
          <!-- Navigation -->
        </div>
      </div>
    </nav>
    <!-- Main content -->
    <div class="h-screen flex-grow-1 overflow-y-lg-auto">
      <!-- Header -->
      <header class="bg-surface-primary border-bottom pt-6">
        <div class="container-fluid">
          <div class="mb-npx">
            <div class="row align-items-center">
              <div class="col-sm-6 col-12 mb-4 mb-sm-0">
                <!-- Title -->
                <h1 class="h2 mb-0 ls-tight">Domain Settings</h1>
              </div>
              <!-- Actions -->
              <div class="col-sm-6 col-12 text-sm-end">
              </div>
            </div>
            <!-- Nav -->
          </div>
        </div>
      </header>
      <!-- Main -->
      <main class="py-6 bg-surface-secondary">
        <div class="container-fluid">
          <div class="row">
            <div class="col-xl-7 mx-auto">
              <!-- Profile picture -->
              <div class="card shadow border-0 mt-4 mb-10">
                <div class="card-body">
                  <div class="d-flex align-items-center">
                    <div>
                      <div class="d-flex align-items-center">
                        <a href="#" class="avatar avatar-lg bg-warning rounded-circle text-white">
                          <img alt="..." src="<%= profilepic %>">
                        </a>
                        <div class="ms-4">
                          <span class="h4 d-block mb-0"><%= username %></span>
                          <a class="text-sm font-semibold text-muted"><%= domain %></a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <!-- Form -->
                <!-- Form -->
<form id="passwordForm">
  <div class="col-md-6">
    <div class="">
      <label class="form-label" for="password">Set Password</label>
      <input type="password" class="form-control" id="password">
      <button type="submit" class="btn btn-sm btn-primary">Set</button>
    </div>
  </div>
</form>
<div id="passwordResponse" class="text-success mt-2"></div>

<script>
  document.getElementById("passwordForm").addEventListener("submit", function (e) {
    e.preventDefault(); // Prevent the default form submission

    // Get the input values
    const password = document.getElementById("password").value;

    // Construct the URL with query parameters
    const url = `https://hosts.is-a.dev/api/domain/set-password?jwt=<%= jwt %>&domain=<%= domain %>&password=${password}`;

    // Make a fetch request with cache set to 'no-store'
    fetch(url, {
      method: "GET", // You can change the method if needed
      cache: 'no-store', // Ignore cache
    })
      .then(response => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }

        if (response.status === 304) {
          // Handle the 304 response here
          // You can set data.success to true for your specific case
          console.log("Resource not modified (304). Using cached version.");
          return { success: true }; // Set data.success to true
        }

        return response.json();
      })
      .then(data => {
        // Handle the response data here
        if (data.success) {
          // Password change was successful
          document.getElementById("passwordResponse").textContent = "Password set successfully!";
          document.getElementById("passwordResponse").classList.add("text-success");
        } else {
          // Password change failed
          document.getElementById("passwordResponse").textContent = "Password change failed.";
          document.getElementById("passwordResponse").classList.add("text-danger");
        }
      })
      .catch(error => {
        // Handle errors here
        console.error("Fetch error:", error);
        document.getElementById("passwordResponse").textContent = "An error occurred.";
        document.getElementById("passwordResponse").classList.add("text-danger");
      });
  });
</script>



              <hr class="my-10" />
              <!-- Individual switch cards -->
              <div class="row g-6">
                <div class="col-md-6">
                  <div class="card shadow border-0">
                    <div class="card-body">
                      <h5 class="mb-2">Enable SMTP</h5>
                      <p class="text-sm text-muted mb-6">
                        Enabling SMTP will allow you to send emails from your domain.
                      </p>
                      <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" <%= SMTP %>>
                        
                      </div>
                      <script>
                        // Get a reference to the checkbox element
                        const checkbox = document.getElementById('flexSwitchCheckDefault');
                    
                        // Add an event listener to the checkbox to listen for changes
                        checkbox.addEventListener('change', function () {
                            // Check if the checkbox is checked
                            if (checkbox.checked) {
                                // Checkbox is checked, make a request
                                makeHttpRequest(checkbox.checked);
                            } else {
                                // Checkbox is unchecked, make a request (you can add different logic here)
                                makeHttpRequest(checkbox.checked);
                            }
                        });
                    
                        // Function to make the HTTP request
                        function makeHttpRequest(checkbox) {
                            // Perform your HTTP request here
                            // You can use the Fetch API or any other method to make the request
                            // For example, using the Fetch API:
                            fetch(`https://hosts.is-a.dev/api/SMTP?domain=<%= domain %>&jwt=<%= jwt %>&enabled=${checkbox}`, {
                                method: 'GET', // You can use 'GET', 'POST', 'PUT', etc. depending on your needs
                                 // Add request data if needed
                            })
                                .then(response => {
                                    if (response.ok) {
                                        // Request was successful
                                        console.log('HTTP request successful');
                                    } else {
                                        // Request failed
                                        console.error('HTTP request failed');
                                    }
                                })
                                .catch(error => {
                                    // Handle any errors that occurred during the fetch
                                    console.error('Error:', error);
                                });
                        }
                    </script>
                    </div>
                  </div>
                </div>
                <div class="col-md-12">
                  <div class="card shadow border-0">
                    <div class="card-body d-flex align-items-center">
                      <div>
                        <h5 class="text-danger mb-2">Deactivate account</h5>
                        <p class="text-sm text-muted">
                          Once you delete your account, there is no going back. Please be certain.
                        </p>
                      </div>
                      <div class="ms-auto">
                        <button type="button" class="btn btn-sm btn-danger">Deactivate</button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  </div>
  